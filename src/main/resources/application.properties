# SPRING KAFKA PRODUCER CONFIG
spring.kafka.producer.bootstrap-servers=localhost:9092
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer


# topics can contain only alpahenumerics, .(period), _(underscore), -(hyphen)
kafka.topic=my-test-topic-wikistream

# SPRING JPA POSTGRES CONFIG
# docker run --env POSTGRES_PASSWORD=bulgogi --env POSTGRES_USER=mydb --publish 5432:5432 postgres:15.1-alpine
spring.datasource.url= jdbc:postgresql://localhost:5432/mydb
spring.datasource.username= mydb
spring.datasource.password= bulgogi

spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation= true
spring.jpa.properties.hibernate.dialect= org.hibernate.dialect.PostgreSQLDialect

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto= update
# We set the value to update value so that a table will be created in the database automatically corresponding to defined data model. Any change to the model will also trigger an update to the table. For production, this property should be validate.


server.port=8080
